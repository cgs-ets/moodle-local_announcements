{"version":3,"sources":["../src/post.js"],"names":["define","$","AudienceSelector","ImpersonateSelector","Log","Post","rootel","self","prototype","main","cancel","init","on","e","nativeform","preventDefault","handleSubmit","form","audienceselector","find","first","haswarnings","removeClass","each","selecteditems","selectedroles","hasroles","data","length","addClass","intersections","submit","debug","error","post"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Provides the local_announcements/post module\n *\n * @package   local_announcements\n * @category  output\n * @copyright 2020 Michael Vangelovski <michael.vangelovski@hotmail.com>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module local_announcements/post\n */\ndefine(['jquery', 'local_announcements/audienceselector', 'local_announcements/impersonateselector', 'core/log', 'core/modal_factory', 'core/modal_events', 'core/templates', 'core/form-autocomplete'], \n    function($, AudienceSelector, ImpersonateSelector, Log, ModalFactory, ModalEvents, Templates, AutoComplete) {    \n    'use strict';\n\n    /**\n     * Initializes the post component.\n     */\n    function init() {\n        Log.debug('local_announcements/post: initializing');\n\n        var rootel = $('#page-local-announcements-post');\n\n        if (!rootel.length) {\n            Log.error('local_announcements/post: #page-local-announcements-post not found!');\n            return;\n        }\n\n        var post = new Post(rootel);\n        post.main();\n    }\n\n\n    /**\n     * The constructor\n     *\n     * @constructor\n     * @param {jQuery} rootel\n     */\n    function Post(rootel) {\n        var self = this;\n        self.rootel = rootel;\n    }\n\n    /**\n     * Run the Audience Selector.\n     *\n     */\n   Post.prototype.main = function () {\n        var self = this;\n        var cancel = false;\n\n        // Initialise audience selector.\n        AudienceSelector.init();\n\n        // Initialise the impersonate selector.\n        ImpersonateSelector.init();\n\n        // Handle submit. Adding a click event to the post button causes it to not work\n        // so event is on form submit instead. \n        self.rootel.on('submit', 'form[data-form=lann-post]', function(e) {\n            if (!cancel) {\n                var nativeform = this;\n                e.preventDefault();\n                self.handleSubmit(nativeform);\n            }\n        });\n\n        // Handle cancel.\n        self.rootel.on('click', 'form[data-form=lann-post] input[name=\"cancel\"]', function(e) {\n            cancel = true;\n        });\n\n        // Fix for bug: when editing an announcement that has an impersonate value, the autocomplete\n        // field does not initialise correctly. The click event to remove the value does not work \n        // and the initial value is not set in the underlying select. To make the remove work, the input \n        // must be triggered in some way causing the selected list to be rerendered. This fix \n        // triggers a click event on the drop down causing a rerender of the autocompete field. A blur event\n        // on the input then hides the suggestions but also causes the initial selections to be deselected.\n        // The selection is reselected. The select to The timeout is added because the fix won't work if \n        // the autocomplete field hasn't been initialised yet. A hacky downside to this is that it shifts the \n        // field focus and the user could be in the process of typing in another field.\n        /*setTimeout(function(){ \n            var imroot = self.rootel.find('select[name=\"impersonate\"]').parent();\n            // Only perform this check when editing an announcement and there is a selected value.\n            if ( self.rootel.find('input[name=\"edit\"]').val() > 0 && imroot.find('[role=\"listitem\"]').length > 0) {\n                imroot.find('.form-autocomplete-downarrow').click();\n                imroot.find('input').blur();\n                var iminitialval = self.rootel.find('input[name=\"initialimpersonate\"]').val();\n                self.rootel.find('select[name=\"impersonate\"]').val(iminitialval);\n            }\n            \n        }, 3000);*/\n\n    };\n\n    /**\n     * Check if user is building an audience before submitting.\n     *\n     * @method handleSubmit\n     */\n    Post.prototype.handleSubmit = function (form) {\n        var self = this;\n        var audienceselector = self.rootel.find('.audience-selector').first();\n\n        // Reset any warnings.\n        var haswarnings = false;\n        $('.roles>ul').removeClass('warn');\n\n        self.rootel.find('.contents').each(function() {\n            // Get selected items.\n            var selecteditems = $(this).find('.item:checked');\n\n            // Get selected roles.\n            var selectedroles = $(this).find('.role:checked');\n\n            // If user has selected items but no roles, add a red border.\n            var hasroles = $(this).data('audiencehasroles');\n            if (hasroles && selecteditems.length > 0 && selectedroles.length == 0) {\n                haswarnings = true;\n                audienceselector.find('.roles>ul').addClass('warn');\n            }\n\n            // Check if mid intersection.\n            var intersections = audienceselector.find('.intersection-workspace.has-tags');\n            if (intersections.length) {\n                haswarnings = true;\n                intersections.addClass('warn');\n            }\n\n        });\n\n       \n        if (!haswarnings) {\n            $('.lann-post-overlay').addClass('active');\n            form.submit();\n        }\n        \n    };\n\n    return {\n        init: init\n    };\n});"],"file":"post.min.js"}